/**
 *
 * File: Java_DB_RegisterForm.java
 *
 * Author: Nikola Georgeiv
 *
 * Date: 11/28/2023
 */
package fractaltrees;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


public final class Java_DB_RegisterForm extends javax.swing.JFrame {

    /**
     * Creates new form JavaDB
     */
    public Java_DB_RegisterForm() {
        initComponents();
        loadCover();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        pnl_welcome = new javax.swing.JPanel();
        txt_Name = new javax.swing.JTextField();
        bthn_exit = new javax.swing.JButton();
        txt_Pass = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bthn_reg = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txt_confirmPass = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblMessege = new javax.swing.JLabel();
        lblPicture = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnl_welcome.setPreferredSize(new java.awt.Dimension(500, 370));

        txt_Name.setToolTipText("");
        txt_Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_Name.setInheritsPopupMenu(true);
        txt_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_NameActionPerformed(evt);
            }
        });

        bthn_exit.setBackground(new java.awt.Color(0, 0, 0));
        bthn_exit.setForeground(new java.awt.Color(255, 255, 255));
        bthn_exit.setText("Exit");
        bthn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthn_exitActionPerformed(evt);
            }
        });

        txt_Pass.setToolTipText("");
        txt_Pass.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_Pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_PassActionPerformed(evt);
            }
        });

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        bthn_reg.setBackground(new java.awt.Color(0, 0, 0));
        bthn_reg.setForeground(new java.awt.Color(255, 255, 255));
        bthn_reg.setText("Register");
        bthn_reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthn_regActionPerformed(evt);
            }
        });

        jLabel4.setText("Confirm password");

        txt_confirmPass.setToolTipText("");
        txt_confirmPass.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txt_confirmPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_confirmPassActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Fractal Trees");

        javax.swing.GroupLayout pnl_welcomeLayout = new javax.swing.GroupLayout(pnl_welcome);
        pnl_welcome.setLayout(pnl_welcomeLayout);
        pnl_welcomeLayout.setHorizontalGroup(
            pnl_welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_welcomeLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnl_welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_welcomeLayout.createSequentialGroup()
                        .addComponent(lblMessege)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bthn_exit)
                        .addGap(18, 18, 18))
                    .addGroup(pnl_welcomeLayout.createSequentialGroup()
                        .addGroup(pnl_welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_welcomeLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(bthn_reg))
                            .addGroup(pnl_welcomeLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel4))
                            .addGroup(pnl_welcomeLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel2))
                            .addGroup(pnl_welcomeLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel3))
                            .addGroup(pnl_welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_Pass, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                .addComponent(txt_confirmPass)
                                .addComponent(txt_Name)))
                        .addGap(18, 18, 18)
                        .addComponent(lblPicture, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                        .addGap(8, 8, 8))))
            .addGroup(pnl_welcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_welcomeLayout.setVerticalGroup(
            pnl_welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_welcomeLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(pnl_welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_welcomeLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txt_confirmPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_Pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bthn_reg))
                    .addComponent(lblPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnl_welcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMessege)
                    .addComponent(bthn_exit))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl_welcome, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_welcome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadCover() {
        try {
            BufferedImage img = ImageIO.read(new File("img\\intro.png"));
            ImageIcon image = new ImageIcon(img);
            Image im = image.getImage();
            Image myimg = im.getScaledInstance(lblPicture.getWidth(), lblPicture.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon newImage = new ImageIcon(myimg);
            lblPicture.setIcon(newImage);
        } catch (IOException e) {
        }

    }

    private static String generateHash(String data, String algorithm, byte[] salt) throws NoSuchAlgorithmException {

        MessageDigest digest = MessageDigest.getInstance(algorithm);
        digest.reset();
        digest.update(salt);
        byte[] hash = digest.digest(data.getBytes());
        return bytesToStringHex(hash);
    }

    private final static char[] hexArray = "0123456789ABCDEF".toCharArray();

    public static String bytesToStringHex(byte[] bytes) {
        char[] hexChars = new char[bytes.length * 2];
        for (int j = 0; j < bytes.length; j++) {
            int v = bytes[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];

        }
        return new String(hexChars);
    }

    public static byte[] createSalt() {
        byte[] bytes = new byte[20];
        SecureRandom random = new SecureRandom();
        random.nextBytes(bytes);
        return bytes;
    }

    public static boolean isValidUserName(String userName) {
        try {

            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_db", "root", "nchg1234");
            if (conn != null) {
                Statement stm = conn.createStatement();
                String query = "SELECT user_salt, user_hash FROM java_salt_complite;";
                ResultSet rs = stm.executeQuery(query);

                while (rs.next()) {

                    String userSaltDB = rs.getString("user_salt");
                    String userHashDB = rs.getString("user_hash");
                    byte[] convertedSaltUser = new byte[userSaltDB.length() / 2];
                    for (int i = 0; i < convertedSaltUser.length; i++) {
                        int index = i * 2;
                        int val = Integer.parseInt(userSaltDB.substring(index, index + 2), 16);
                        convertedSaltUser[i] = (byte) val;
                    }
                    String realUser = generateHash(userName, "MD5", convertedSaltUser);

                    if (realUser.equals(userHashDB) == true) {
                        return false;

                    }

                }

            } else {

                System.err.println("Can't connect to DB when making username validation");

            }

        } catch (Exception e) {
            System.err.println(e);
        }

        return true;
    }
    private void bthn_regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthn_regActionPerformed

        String pass = txt_Pass.getText();
        String repeatPAss = txt_confirmPass.getText();
        if (pass.equals(repeatPAss)) {
            String name = txt_Name.getText();

            if (isValidUserName(name) == true) {

                try {
                    String algorithm = "MD5";
                    byte[] saltUser = createSalt();
                    byte[] saltPass = createSalt();

                    String strSaltUser = bytesToStringHex(saltUser);
                    String strSaltPass = bytesToStringHex(saltPass);
                    String hashUser = generateHash(name, algorithm, saltUser);
                    String hashPass = generateHash(pass, algorithm, saltPass);

                    try {
                        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_db", "root", "nchg1234");

                        if (conn != null) {
                            // Check if the user name is taken

                            Statement stm = conn.createStatement();

                            String insert = "Insert into java_salt_complite (user_salt,user_hash,pass_salt,pass) values ('"
                                    + strSaltUser + "','"
                                    + hashUser + "','"
                                    + strSaltPass + "','"
                                    + hashPass
                                    + "');";
                            //insert into java_salt_complite (user_salt,user,pass_salt,pass) values ("asd","asdasd","asd","sda");
                            stm.execute(insert);
                            new Java_DB_LoginForm().setVisible(true);
                            this.dispose();

                        }
                    } catch (Exception e) {
                        System.err.println(e);

                    }

                } catch (NoSuchAlgorithmException ex) {
                    Logger.getLogger(Java_DB_RegisterForm.class.getName()).log(Level.SEVERE, null, ex);
                } 
            } else {
                JOptionPane.showMessageDialog(this, "Taken username!!!", "Taken username",
                        JOptionPane.ERROR_MESSAGE);

            }
        } else {
            JOptionPane.showMessageDialog(this, "The passwords do not match!!!", "Password error",
                    JOptionPane.ERROR_MESSAGE);

        }


    }//GEN-LAST:event_bthn_regActionPerformed

    private void txt_PassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_PassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_PassActionPerformed

    private void bthn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthn_exitActionPerformed
        // TODO add your handling code here:

        System.exit(0);
    }//GEN-LAST:event_bthn_exitActionPerformed

    private void txt_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_NameActionPerformed

    private void txt_confirmPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_confirmPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_confirmPassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Java_DB_RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Java_DB_RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Java_DB_RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Java_DB_RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Java_DB_RegisterForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bthn_exit;
    private javax.swing.JButton bthn_reg;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel lblMessege;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JPanel pnl_welcome;
    private javax.swing.JTextField txt_Name;
    private javax.swing.JTextField txt_Pass;
    private javax.swing.JTextField txt_confirmPass;
    // End of variables declaration//GEN-END:variables
}
