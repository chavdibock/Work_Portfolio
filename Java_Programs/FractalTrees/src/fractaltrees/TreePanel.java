/**
 *
 * File: TreePanel.java
 *
 * Author: Nikola Georgeiv
 *
 * Date: 11/28/2023
 */
package fractaltrees;

import java.awt.AWTException;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics2D;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.Random;
import java.util.Scanner;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;


public class TreePanel extends javax.swing.JFrame implements MountainInterface {

    /**
     * Creates new form Main
     */
    public TreePanel() {
        initComponents();
    }

    private boolean clickAllowed = false;
    private int mountainSize = -1;
    private int threadMax = -1;
    private int bypassMaxIndex = 0;
    private Vector<SnowflakeCoordinates> snowflakeCoord = new Vector<SnowflakeCoordinates>();
    private Vector<SunThread> sunThreadList = new Vector<SunThread>();

    GraphicsDevice gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();
    int displayWidth = gd.getDisplayMode().getWidth();
    int displayHeight = gd.getDisplayMode().getHeight();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_display = new javax.swing.JPanel();
        lbl_mountain = new javax.swing.JLabel();
        pnl_controls = new javax.swing.JPanel();
        btn_launch = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        lbl_size = new javax.swing.JLabel();
        txt_size = new javax.swing.JTextField();
        btn_setSize = new javax.swing.JButton();
        btn_refresh = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        lbl_limits = new javax.swing.JLabel();
        btn_sun = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        btn_Gallery = new javax.swing.JButton();
        pnl_title = new javax.swing.JPanel();
        lbl_title = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnl_display.setBackground(new java.awt.Color(102, 204, 255));
        pnl_display.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnl_displayMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pnl_displayLayout = new javax.swing.GroupLayout(pnl_display);
        pnl_display.setLayout(pnl_displayLayout);
        pnl_displayLayout.setHorizontalGroup(
            pnl_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_displayLayout.createSequentialGroup()
                .addComponent(lbl_mountain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnl_displayLayout.setVerticalGroup(
            pnl_displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_displayLayout.createSequentialGroup()
                .addComponent(lbl_mountain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 394, Short.MAX_VALUE))
        );

        pnl_controls.setBackground(new java.awt.Color(255, 255, 255));
        pnl_controls.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_launch.setBackground(new java.awt.Color(0, 0, 0));
        btn_launch.setForeground(new java.awt.Color(255, 255, 255));
        btn_launch.setText("Launch");
        btn_launch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_launchActionPerformed(evt);
            }
        });

        btn_exit.setBackground(new java.awt.Color(0, 0, 0));
        btn_exit.setForeground(new java.awt.Color(255, 255, 255));
        btn_exit.setText("Exit");
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        lbl_size.setText("Mountain size:");

        btn_setSize.setBackground(new java.awt.Color(0, 0, 0));
        btn_setSize.setForeground(new java.awt.Color(255, 255, 255));
        btn_setSize.setText("Set");
        btn_setSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_setSizeActionPerformed(evt);
            }
        });

        btn_refresh.setBackground(new java.awt.Color(0, 0, 0));
        btn_refresh.setForeground(new java.awt.Color(255, 255, 255));
        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        btn_reset.setBackground(new java.awt.Color(0, 0, 0));
        btn_reset.setForeground(new java.awt.Color(255, 255, 255));
        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        lbl_limits.setText("(100 - 550)");

        btn_sun.setBackground(new java.awt.Color(0, 0, 0));
        btn_sun.setForeground(new java.awt.Color(255, 255, 255));
        btn_sun.setText("Sun");
        btn_sun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sunActionPerformed(evt);
            }
        });

        btn_save.setBackground(new java.awt.Color(0, 0, 0));
        btn_save.setForeground(new java.awt.Color(255, 255, 255));
        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_Gallery.setBackground(new java.awt.Color(0, 0, 0));
        btn_Gallery.setForeground(new java.awt.Color(255, 255, 255));
        btn_Gallery.setText("Galery");
        btn_Gallery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GalleryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_controlsLayout = new javax.swing.GroupLayout(pnl_controls);
        pnl_controls.setLayout(pnl_controlsLayout);
        pnl_controlsLayout.setHorizontalGroup(
            pnl_controlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_controlsLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btn_launch)
                .addGap(18, 18, 18)
                .addComponent(lbl_size)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_size, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_setSize, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_limits)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Gallery)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(btn_save)
                .addGap(18, 18, 18)
                .addComponent(btn_sun)
                .addGap(21, 21, 21)
                .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btn_reset)
                .addGap(18, 18, 18)
                .addComponent(btn_exit)
                .addGap(32, 32, 32))
        );
        pnl_controlsLayout.setVerticalGroup(
            pnl_controlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_controlsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_controlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_controlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_exit)
                        .addComponent(btn_refresh)
                        .addComponent(btn_reset))
                    .addGroup(pnl_controlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_launch)
                        .addComponent(lbl_size)
                        .addComponent(txt_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_setSize)
                        .addComponent(lbl_limits)
                        .addComponent(btn_Gallery))
                    .addGroup(pnl_controlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_sun)
                        .addComponent(btn_save)))
                .addContainerGap())
        );

        pnl_title.setBackground(new java.awt.Color(255, 255, 255));
        pnl_title.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_title.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        lbl_title.setText("Fractal Trees");

        javax.swing.GroupLayout pnl_titleLayout = new javax.swing.GroupLayout(pnl_title);
        pnl_title.setLayout(pnl_titleLayout);
        pnl_titleLayout.setHorizontalGroup(
            pnl_titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_titleLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lbl_title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_titleLayout.setVerticalGroup(
            pnl_titleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_titleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnl_controls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pnl_display, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnl_controls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addComponent(pnl_display, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limitSize() {
        int sizeMin = 0, sizeMax = 0;
        try {
            File cfg = new File("config\\mountain.txt");
            Scanner read = new Scanner(cfg);

            read.nextLine();
            sizeMin = Integer.parseInt(read.nextLine());
            read.nextLine();
            sizeMax = Integer.parseInt(read.nextLine());

            read.close();
        } catch (FileNotFoundException ex) {
            System.out.println(ex.getMessage());
        }

        if (mountainSize < sizeMin || mountainSize > sizeMax) {
            mountainSize = (sizeMin + sizeMax) / 2;
        }
    }

    private void readThreadMax() {
        try {
            File cfg = new File("config\\thread.txt");
            Scanner read = new Scanner(cfg);

            read.nextLine();
            threadMax = Integer.parseInt(read.nextLine()) + 1;

            read.close();
        } catch (FileNotFoundException ex) {
            System.out.println(ex.getMessage());
        }
    }

    // making ht emoubtain in the begining
    @Override
    public void buildMountain(int level, double x0, double y0, double x1, double y1, Graphics2D g2d) {
        if (level == 1) {
            GradientPaint gr = new GradientPaint(0, pnl_display.getHeight() - (mountainSize / 2 + mountainSize / 3), Color.WHITE,
                    0, pnl_display.getHeight(), new Color(51, 0, 0));
            g2d.setPaint(gr);

            g2d.drawLine((int) x0, (int) y0, (int) x1, (int) y1);
            g2d.drawLine((int) x0, (int) y0, (int) x0, displayHeight);
            return;
        }

        double x2 = (2 * x0 + x1) / 3;
        double y2 = (2 * y0 + y1) / 3;

        double x3 = (x0 + 2 * x1) / 3;
        double y3 = (y0 + 2 * y1) / 3;

        double x = x3 - x2;
        double y = y3 - y2;

        double x4 = x2 + x * Math.cos(-Math.PI / 9) - y * Math.sin(-Math.PI / 9);
        double y4 = y2 + x * Math.sin(-Math.PI / 9) + y * Math.cos(-Math.PI / 9);

        buildMountain(level - 1, x0, y0, x2, y2, g2d);
        buildMountain(level - 1, x2, y2, x4, y4, g2d);
        buildMountain(level - 1, x4, y4, x3, y3, g2d);
        buildMountain(level - 1, x3, y3, x1, y1, g2d);
    }

    @Override
    public void drawMountain(int x, int y, Graphics2D g2d) {
        if (x >= pnl_display.getWidth()) {
            return;
        }

        Random rand = new Random();

        int level = 4;
        int nextX = x + rand.nextInt(350);
        int nextY = pnl_display.getHeight() - rand.nextInt(mountainSize);
        if (nextY < 0) {
            nextY = 0;
        }

        buildMountain(level, x, y, nextX, nextY, g2d);
        drawMountain(nextX, nextY, g2d);
    }

    @Override
    public void saveMountain() {
        Random rand = new Random();

        BufferedImage bi = new BufferedImage(pnl_display.getWidth(), pnl_display.getHeight(), BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d = bi.createGraphics();
        g2d.setStroke(new BasicStroke(25));

        drawMountain(0, pnl_display.getHeight() - rand.nextInt(mountainSize), g2d);

        try {
            ImageIO.write(bi, "PNG", new File("img\\mountain.png"));
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }

    @Override
    public void displayMountain() {
        try {
            BufferedImage img = ImageIO.read(new File("img\\mountain.png"));
            lbl_mountain.setIcon(new ImageIcon(img));
            lbl_mountain.revalidate();
            lbl_mountain.repaint();
            lbl_mountain.update(lbl_mountain.getGraphics());
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }


    private void btn_launchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_launchActionPerformed
        limitSize();
        readThreadMax();

        saveMountain();
        displayMountain();

        clickAllowed = true;

        btn_sun.setVisible(true);
        btn_refresh.setVisible(true);
        btn_reset.setVisible(true);

        btn_launch.setVisible(false);
        btn_setSize.setVisible(false);
        txt_size.setVisible(false);
        lbl_size.setVisible(false);
        lbl_limits.setVisible(false);
    }//GEN-LAST:event_btn_launchActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_setSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_setSizeActionPerformed
        try {
            mountainSize = Integer.parseInt(txt_size.getText());
        } catch (NumberFormatException ex) {
            System.out.println(ex.getMessage());
        }
        txt_size.setText("");
    }//GEN-LAST:event_btn_setSizeActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        btn_sun.setVisible(false);
        btn_refresh.setVisible(false);
        btn_reset.setVisible(false);

        gd.setFullScreenWindow(this);
    }//GEN-LAST:event_formWindowOpened

    private boolean allowNewThread() {
        boolean allow = false;
        if (snowflakeCoord != null && snowflakeCoord.size() == threadMax - 1) {
            for (int i = bypassMaxIndex; i < snowflakeCoord.size(); i++) {
                if (!(snowflakeCoord.get(i).isAttachedThread()
                        && !snowflakeCoord.get(i).isFreeThread()
                        && !snowflakeCoord.get(i).isUsedThread())) {
                    allow = true;
                }
            }
        } else {
            allow = true;
        }

        return allow;
    }

    private void newThread(int index) {
        SnowflakeThread thread = new SnowflakeThread();
        thread.setThreadIdentificator(index);
        thread.setPanel(pnl_display);
        thread.setCoord(snowflakeCoord);
        thread.start();

    }

    private void pnl_displayMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_displayMouseReleased
        if (!clickAllowed || !allowNewThread()) {
            return;
        }

        SnowflakeCoordinates c = new SnowflakeCoordinates(evt.getX(), evt.getY());
        snowflakeCoord.add(c);

        for (int i = bypassMaxIndex; i < threadMax && i <= snowflakeCoord.size() - 1; i++) {
            if (snowflakeCoord.get(i).isAttachedThread()) {
                if (snowflakeCoord.get(i).isFreeThread()) {

                    snowflakeCoord.get(i).setFreeThread(false);
                    snowflakeCoord.get(i).setUsedThread(true);

                    newThread(threadMax);
                    threadMax++;

                    bypassMaxIndex++;
                }

                continue;
            }

            newThread(i);
            snowflakeCoord.get(i).setAttachedThread(true);
        }


    }//GEN-LAST:event_pnl_displayMouseReleased


    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        try {
            clickAllowed = true;
            for (int i = 0; i < sunThreadList.size(); i++) {
                sunThreadList.get(i).setRefreshCalled(true);
            }
            sunThreadList.clear();

            for (int i = bypassMaxIndex; i < threadMax && i <= snowflakeCoord.size() - 1; i++) {
                snowflakeCoord.get(i).setRefreshCalled(true);
            }
            snowflakeCoord.clear();
            readThreadMax();
            bypassMaxIndex = 0;

            Thread.sleep(50);

            pnl_display.repaint();

            displayMountain();
        } catch (InterruptedException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        try {
            clickAllowed = true;
            for (int i = 0; i < sunThreadList.size(); i++) {
                sunThreadList.get(i).setRefreshCalled(true);
            }
            sunThreadList.clear();

            for (int i = bypassMaxIndex; i < threadMax && i <= snowflakeCoord.size() - 1; i++) {
                snowflakeCoord.get(i).setRefreshCalled(true);
            }
            snowflakeCoord.clear();
            readThreadMax();
            bypassMaxIndex = 0;

            Thread.sleep(50);

            pnl_display.repaint();
            lbl_mountain.setIcon(null);

            clickAllowed = false;

            btn_sun.setVisible(false);
            btn_refresh.setVisible(false);
            btn_reset.setVisible(false);

            btn_launch.setVisible(true);
            btn_setSize.setVisible(true);
            txt_size.setVisible(true);
            lbl_size.setVisible(true);
            lbl_limits.setVisible(true);
        } catch (InterruptedException ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btn_resetActionPerformed

    private void btn_sunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sunActionPerformed
        clickAllowed = false;
        Graphics2D g2d = (Graphics2D) pnl_display.getGraphics();

        SunThread sun = new SunThread();

        sun.setG2d(g2d);
        sun.setX((int) ((float) (1200 * 1366) / displayWidth));
        sun.setY((int) ((float) (50 * 768) / displayHeight));
        sun.setR(40);
        sun.setLevel(4);
        sun.setG(255);
        sun.setFlow(30);

        sun.start();
        sunThreadList.add(sun);
    }//GEN-LAST:event_btn_sunActionPerformed


    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed

        try {
            Robot rb = new Robot();
            Rectangle rc = new Rectangle(pnl_display.getBounds().x + 10, pnl_display.getBounds().y + 27, pnl_display.getBounds().width, pnl_display.getBounds().height);
            BufferedImage bf = rb.createScreenCapture(rc);
            ImageIO.write(bf, "png", new File("img\\asd.png"));

            InputStream is = new FileInputStream("img\\\\asd.png");
            Timestamp currentTimestamp = new Timestamp(System.currentTimeMillis());

            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/java_db", "root", "nchg1234");

            Statement stm = conn.createStatement();
            PreparedStatement insert = conn.prepareStatement("insert into img(pic,createTime,createdBy) values (?,?,?)");

            insert.setBlob(1, is);
            insert.setTimestamp(2, currentTimestamp);
            insert.setInt(3, Java_DB_LoginForm.id);
            insert.execute();

        } catch (IOException ex) {
            System.out.println(ex.getMessage());

        } catch (AWTException ex) {
            Logger.getLogger(TreePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_btn_saveActionPerformed
    
    
    //public static int userId = Java_DB_LoginForm.id;
    
    
    private void btn_GalleryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GalleryActionPerformed

        Gallery gr = new Gallery();
        gr.establisConnection(Java_DB_LoginForm.id);
        gr.setVisible(true);
        // System.out.println("Tree id for gallery: " + userId);
        this.dispose();

    }//GEN-LAST:event_btn_GalleryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TreePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TreePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TreePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TreePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TreePanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Gallery;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_launch;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_setSize;
    private javax.swing.JButton btn_sun;
    private javax.swing.JLabel lbl_limits;
    private javax.swing.JLabel lbl_mountain;
    private javax.swing.JLabel lbl_size;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JPanel pnl_controls;
    private javax.swing.JPanel pnl_display;
    private javax.swing.JPanel pnl_title;
    private javax.swing.JTextField txt_size;
    // End of variables declaration//GEN-END:variables
}
